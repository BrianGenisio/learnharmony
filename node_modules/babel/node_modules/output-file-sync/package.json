{
  "name": "output-file-sync",
  "version": "1.1.0",
  "description": "Synchronously write a file and create its ancestor directories if needed",
  "repository": {
    "type": "git",
    "url": "git://github.com/shinnn/output-file-sync"
  },
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "scripts": {
    "pretest": "eslint *.js & jscs *.js",
    "test": "node test.js | tap-spec;",
    "coverage": "istanbul cover test.js; ${npm_package_scripts_clean}",
    "coveralls": "istanbul cover test.js && istanbul-coveralls"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shinnn/output-file-sync/blob/master/LICENSE"
    }
  ],
  "files": [
    "index.js",
    "LICENSE"
  ],
  "keywords": [
    "fs",
    "write",
    "sync",
    "synchronous",
    "output",
    "file",
    "mkdir",
    "mkdirp"
  ],
  "dependencies": {
    "mkdirp": "^0.5.0",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "eslint": "^0.10.0",
    "istanbul": "^0.3.2",
    "istanbul-coveralls": "^1.0.1",
    "jscs": "^1.8.0",
    "read-remove-file": "^1.0.0",
    "tap-spec": "^2.1.0",
    "tape": "^3.0.3"
  },
  "jscsConfig": {
    "preset": "google",
    "maximumLineLength": 98
  },
  "readme": "# output-file-sync\n\n[![Build Status](https://travis-ci.org/shinnn/output-file-sync.svg?branch=master)](https://travis-ci.org/shinnn/output-file-sync)\n[![Build status](https://ci.appveyor.com/api/projects/status/3qjn5ktuqb6w2cae?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/output-file-sync)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/output-file-sync.svg)](https://coveralls.io/r/shinnn/output-file-sync)\n[![Dependency Status](https://david-dm.org/shinnn/output-file-sync.svg)](https://david-dm.org/shinnn/output-file-sync)\n[![devDependency Status](https://david-dm.org/shinnn/output-file-sync/dev-status.svg)](https://david-dm.org/shinnn/output-file-sync#info=devDependencies)\n\nSynchronously write a file and create its ancestor directories if needed\n\n```javascript\nvar fs = require('fs');\nvar outputFileSync = require('output-file-sync');\n\noutputFileSync('foo/bar/baz.txt', 'Hi!');\nfs.readFileSync('foo/bar/baz.txt').toString(); //=> 'Hi!'\n```\n\n## Difference from fs.outputFileSync\n\nThis module is very similar to [fs-extra](https://github.com/jprichardson/node-fs-extra)'s [`fs.outputFileSync`](https://github.com/jprichardson/node-fs-extra#outputfilefile-data-callback) but they are different in the following points:\n\n1. *output-file-sync* returns the path of the directory created first. [See the API document for more details.](#outputfilesyncpath-data--options)\n2. *output-file-sync* accepts [mkdirp] options.\n   ```javascript\n   var fs = require('fs');\n   var outputFileSync = require('output-file-sync');\n   outputFileSync('foo/bar', 'content', {mode: 33260});\n\n   fs.statSync('foo').mode; //=> 33260\n   ```\n\n## Installation\n\n[![NPM version](https://badge.fury.io/js/output-file-sync.svg)](https://www.npmjs.org/package/output-file-sync)\n\n[Use npm.](https://www.npmjs.org/doc/cli/npm-install.html)\n\n```sh\nnpm install output-file-sync\n```\n\n## API\n\n```javascript\nvar outputFileSync = require('output-file-sync');\n```\n\n### outputFileSync(*path*, *data* [, *options*])\n\n*path*: `String`  \n*data*: `String` or [`Buffer`](http://nodejs.org/api/buffer.html#buffer_class_buffer)  \n*options*: `Object` or `String` (options for [fs.writeFile] and [mkdirp])  \nReturn: `String` if it creates more than one directories, otherwise `null`\n\nIt writes the data to a file synchronously. If ancestor directories of the file don't exist, it creates the directories before writing the file.\n\n```javascript\nvar fs = require('fs');\nvar outputFileSync = require('output-file-sync');\n\n// When the directory `foo/bar` exists\noutputFileSync('foo/bar/baz/qux.txt', 'Hello', 'utf-8');\n\nfs.statSync('foo/bar/baz').isDirectory(); //=> true\nfs.statSync('foo/bar/baz/qux.txt').isFile(); //=> true\n```\n\nIt returns the directory path just like [mkdirp.sync](https://github.com/substack/node-mkdirp#mkdirpsyncdir-opts):\n\n> Returns the first directory that had to be created, if any.\n\n```javascript\nvar dir = outputFileSync('foo/bar/baz.txt', 'Hello');\ndir; //=> Same value as `path.resolve('foo')`\n```\n\n#### options\n\nAll options for [fs.writeFile] and [mkdirp] are available.\n\nAdditionally, you can use [`fileMode`](#optionsfilemode) option and [`dirMode`](#optionsdirmode) option to set different permission between the file and directories.\n\n##### options.fileMode\n\nSet modes of a file, overriding `mode` option.\n\n##### options.dirMode\n\nSet modes of a directories, overriding `mode` option.\n\n```javascript\noutputFileSync('dir/file', 'content', {dirMode: '0745', fileMode: '0644'});\nfs.statSync('dir').mode.toString(8); //=> '40745'\nfs.statSync('dir/file').mode.toString(8); //=> '100644'\n```\n\n## Related project\n\n* [output-file](https://github.com/shinnn/output-file) (asynchronous version)\n\n## License\n\nCopyright (c) 2014 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n\n[fs.writeFile]: http://nodejs.org/api/fs.html#fs_fs_writefile_filename_data_options_callback\n[mkdirp]: https://github.com/substack/node-mkdirp\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shinnn/output-file-sync/issues"
  },
  "homepage": "https://github.com/shinnn/output-file-sync",
  "_id": "output-file-sync@1.1.0",
  "_from": "output-file-sync@^1.1.0"
}
