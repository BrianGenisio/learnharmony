{
  "name": "babel-bits",
  "version": "0.2.2",
  "main": "src/index.js",
  "scripts": {
    "build": "grunt build",
    "test": "grunt test"
  },
  "dependencies": {
    "babel-core": "~5.2.17",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "browserify": "~10.1.3",
    "chai": "~2.3.0",
    "grunt": "~0.4.5",
    "grunt-banner": "^0.4.0",
    "grunt-browserify": "~3.8.0",
    "grunt-concurrent": "~1.0.0",
    "grunt-contrib-connect": "~0.10.1",
    "grunt-contrib-jshint": "~0.11.2",
    "grunt-contrib-uglify": "~0.9.1",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-mocha": "~0.4.12",
    "grunt-release": "^0.12.0",
    "jshint-stylish": "~1.0.2",
    "mocha": "~2.2.4",
    "sinon": "~1.14.1"
  },
  "browser": {},
  "directories": {
    "test": "test"
  },
  "description": "babel (6to5) transform for bit imports",
  "repository": {
    "type": "git",
    "url": "https://github.com/MiguelCastillo/babel-bits.git"
  },
  "keywords": [
    "babel",
    "bit-runner",
    "bit-imports"
  ],
  "author": {
    "name": "Miguel Castillo",
    "email": "manchagnu@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/MiguelCastillo/babel-bits/issues"
  },
  "homepage": "https://github.com/MiguelCastillo/babel-bits",
  "readme": "# babel-bits\n> [babel](https://www.npmjs.com/package/babel-core) plugin for [bit runner](https://github.com/MiguelCastillo/bit-runner) and transform for [bit imports](https://github.com/MiguelCastillo/bit-imports).\n\n### Install\n```\nnpm install babel-bits\n```\n\n### Configuration for [bit-imports](https://github.com/MiguelCastillo/bit-imports)\n\nOptions are forwarded right to [babel](https://babeljs.io/). Take a look at all available [options](https://babeljs.io/docs/usage/options/) to fine tune babel. *bit imports will automatically handle `filename`.*\n\nYou can take a look at [bit sandbox](https://github.com/MiguelCastillo/bit-sandbox) for a sample where you can play with babel in the browser.\n\n\n#### plugin method\n```javascript\nbitimports.plugin(\"js\", {\n  transform: {\n    handler: \"babel\",\n    options: {\n      sourceMaps: \"inline\"\n    }\n  }\n});\n```\n\nOr alternatively:\n\n#### plugin config\n```javascript\nbitimports.config({\n  plugins: {\n    js: {\n      transform: {\n        handler: \"./node_modules/babel-bits/dist/index.js\",\n        options: {\n          ast: false,\n          sourceMaps: \"inline\"\n        }\n      }\n    }\n  }\n});\n```\n\n\n### Configuration [bit runner](https://github.com/MiguelCastillo/bit-runner) `bitrunnerfile.js`\n\n#### Run babel\n``` javascript\nvar bitRunner = require('bit-runner');\nvar babel     = require('babel-bits');\n\n/**\n * JavaScript pipeline\n */\nbitRunner.register('default', function buildPipeline(task) {\n  task\n    .load('index.js')\n    .then(babel)\n});\n```\n\n#### Configure and run babel\n\nThe configuration settings are passed right to [babel](https://babeljs.io), so please refer to their [docs](https://babeljs.io/docs/usage/options/) for details on the available options.\n\n``` javascript\nvar bitRunner = require('bit-runner');\nvar babel     = require('babel-bits');\n\n/**\n * JavaScript pipeline\n */\nbitRunner.register('default', function buildPipeline(task) {\n  task\n    .load('index.js')\n    .then(babel.config({ast: false}))\n});\n```\n\n### Note on *generators\n[babel](https://babeljs.io/) needs an external tool called [regenerator](https://github.com/facebook/regenerator) in order to support `generator`s.  To bring `generator` support into your application, you can just load [regenerator](https://github.com/facebook/regenerator) via script tag (or equivalent) and all `generator` code produced by babel will run just fine.  The idea here is that the code produced by babel can find the method `regeneratorRuntime` whenever it is executed.\n",
  "readmeFilename": "README.md",
  "gitHead": "d0950775ae3a84e22d9e2896aeb4e691893c79f2",
  "_id": "babel-bits@0.2.2",
  "_shasum": "33b10ba37b5081d879c061241ad369be293050d2",
  "_from": "babel-bits@>=0.2.2 <0.3.0"
}
